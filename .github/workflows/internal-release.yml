name: Publish Internal Release

on:
  release:
    types: [ prereleased ]
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image:  cirrusci/flutter:latest

    steps:
      - uses: actions/checkout@v2

      - name: Print Dart SDK version
        run: dart --version
      
      - name: Print Flutter SDK version
        run: flutter --version

      - name: Analyze project source
        run: flutter analyze
      
      - name: Build
        run: flutter build appbundle

      - uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/

  publish-android:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:        
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: android-release
        
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: 'bundle/release'
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env: 
          BUILD_TOOLS_VERSION: "30.0.2"
      
      - name: Publish
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT }}
          packageName: com.whisperingmule.mule
          releaseFiles: ${{ steps.sign_app.outputs.signedReleaseFile }}
          track: internal
          inAppUpdatePriority: 1
          whatsNewDirectory: distribution/whatsnew
          mappingFile: mapping/release/mapping.txt
        
        
  publish-ios:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:        
      - uses: actions/checkout@v2
        
      - name: PLACEHOLDER
        run: echo "Should publish to Apple App Store"
